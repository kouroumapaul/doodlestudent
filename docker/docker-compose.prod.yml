version: "3.8"
services:
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=tlc
      - MYSQL_USER=tlc
      - MYSQL_PASSWORD=tlc
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  etherpad:
    image: etherpad/etherpad
    volumes:
      - ./APIKEY.txt:/opt/etherpad-lite/APIKEY.txt
    networks:
      - app-network

  mail:
    image: bytemark/smtp
    restart: always
    networks:
      - app-network

  backend:
    image: paulkourouma/tlc-backend:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      etherpad:
        condition: service_started
      mail:
        condition: service_started
    environment:
      - quarkus_datasource_jdbc_url=jdbc:mysql://db:3306/tlc?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true&serverTimezone=Europe/Paris
      - quarkus_datasource_username=tlc
      - quarkus_datasource_password=tlc
      - quarkus_hibernate_orm_database_generation=update
      - quarkus_mailer_from=olivier.barais@gmail.com
      - quarkus_mailer_host=mail
      - quarkus_mailer_port=25
      - quarkus_mailer_ssl=false
      - quarkus_mailer_username=""
      - quarkus_mailer_password=""
      - quarkus_mailer_mock=true
      - doodle_usepad=false
      - doodle_padUrl=http://etherpad:9001/
      - doodle_padApiKey=changeit
      - doodle_organizermail=olivier.barais@gmail.com
    networks:
      - app-network

  myadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=root
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    image: paulkourouma/tlc-frontend:latest
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - myadmin
      - etherpad
    volumes:
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./front/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    depends_on:
      - frontend
    # Pour le test, on va utiliser la commande "--dry-run"
    # Une fois test√©, vous pouvez retirer "--dry-run"
    command: certonly --webroot --webroot-path=/var/www/certbot
             --email paulledadj@gmail.com --agree-tos --no-eff-email
             --force-renewal
             -d doodle.paulkourouma.com -d myadmin.paulkourouma.com -d pad.paulkourouma.com -d grafana.paulkourouma.com -d munin.paulkourouma.com

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - app-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://grafana.paulkourouma.com
    networks:
      - app-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - app-network
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-network
    restart: unless-stopped

  # munin:
  #   image: dockurr/munin
  #   volumes:
  #     - ./munin:/etc/munin
  #     - munin_data:/var/lib/munin
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:
  munin_data:
